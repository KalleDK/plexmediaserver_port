#!/bin/sh
# Created by: Created by: KalleDK <plexmaintainer@k-moeller.dk>
#
# $FreeBSD$
#
# PROVIDE: plexmediaserver
# REQUIRE: LOGIN
# KEYWORD: shutdown
#
# Add the following lines to /etc/rc.conf to enable the Plex Media Server:
#
# plexmediaserver_enable="YES"
#

. /etc/rc.subr

name=plexmediaserver
rcvar=plexmediaserver_enable
load_rc_config $name

: ${plexmediaserver_enable:=NO}
: ${plexmediaserver_user:="%%USERS%%"}

extra_commands=status
start_precmd=plex_precmd
start_cmd=plex_startcmd
status_cmd=plex_statuscmd
stop_cmd=plex_stopcmd
pidfile=/var/run/plex/plex.pid

plex_precmd()
{
	export SUPPORT_PATH="%%DATADIR%%/plexdata"
	export HOME="${SUPPORT_PATH}/Plex Media Server"
	export SCRIPTPATH="%%DATADIR%%"
	export LD_LIBRARY_PATH="${SCRIPTPATH}"
	export PLEX_MEDIA_SERVER_HOME="${SCRIPTPATH}"
	export PLEX_MEDIA_SERVER_MAX_PLUGIN_PROCS=6
	export PLEX_MEDIA_SERVER_APPLICATION_SUPPORT_DIR=$SUPPORT_PATH
	export PLEX_MEDIA_SERVER_PIDFILE=${pidfile}
	export PATH="${SCRIPTPATH}/Resources/Python/bin:$PATH"
	export LC_ALL="C"
	export LANG="C"
	ulimit -s 3000

	if [ ! -d ${pidfile%/*} ]; then
		install -d -o ${plexmediaserver_user} ${pidfile%/*};
	fi
}

plex_startcmd()
{
	echo "Starting ${name}."
	/usr/sbin/daemon -u %%USERS%% -f '%%DATADIR%%/Plex Media Server'
}

plex_statuscmd()
{
	if pgrep -F ${pidfile} >/dev/null; then
		echo "${name} is running with pid: $(cat ${pidfile})";
	else
		echo "${name} is not running.";
		exit 1;
	fi
}

plex_stopcmd()
{
	if pgrep -F "${pidfile}" >/dev/null; then
		mypid=$(cat ${pidfile});
		sig_stop=-INT;
		kill ${sig_stop} ${mypid};
		wait_for_pids ${mypid};
	else
		echo "${name} is not running.";
		exit 1;
	fi
}

run_rc_command "$1"
